--6. CEL MAI MIC SOLD IN FUNCTIE DE MONEDA

SELECT MIN(SOLD) AS SOLDUL_MINIM, MONEDA
FROM SOLD
GROUP BY MONEDA;

--7. CEL MAI MARE SOLD IN FUNCTIE DE MONEDA

SELECT MAX(SOLD) AS SOLDUL_MINIM, MONEDA
FROM SOLD
GROUP BY MONEDA;

--8.AFISAREA NUMARULUI DE CLIENTI IN FUNCTIE DE TIPUL CARDULUI

SELECT COUNT(ID_CL), TIP_CARD
FROM CARD
GROUP BY TIP_CARD;

--9. AFISAREA NUMARULUI DE TRANZACTII EFECTUATE PENTRU FIECARE TIP 

SELECT  COUNT(IT.ID_TRANZACTIE), T.TIPUL
FROM INREGISTRARE_TRANZACTIE IT, TIPUL_TRANZACTIEI T
WHERE IT.ID_TIP=T.ID_TIP
GROUP BY T.TIPUL;


--10.MEDIA VARSTEI CLIENTILOR IN FUNCTIE DE TRANZACTIILE EFECTUATE(DIN TABELA INREGISTRARE_TRANZACTIE)

SELECT ROUND((SYSDATE - DATA_NASTERII_CL)/365,0) AS VARSTA, T.TIPUL
FROM CLIENT CL, INREGISTRARE_TRANZACTIE IT, TIPUL_TRANZACTIEI T
WHERE CL.ID_CL = IT.ID_CL AND IT.ID_TIP = T.ID_TIP;

--11. NUMARUL DE TRANZACTII DIN FIECARE LUNA A ANULUI 2022

SELECT EXTRACT(MONTH FROM DATA_INREG) AS LUNA, EXTRACT(YEAR FROM DATA_INREG) AS AN, COUNT(ID_TRANZACTIE)
FROM INREGISTRARE_TRANZACTIE
WHERE EXTRACT(YEAR FROM DATA_INREG) = 2022
GROUP BY EXTRACT(MONTH FROM DATA_INREG),  EXTRACT(YEAR FROM DATA_INREG)
ORDER BY EXTRACT(MONTH FROM DATA_INREG), EXTRACT(YEAR FROM DATA_INREG);



COMMIT;



--12. AFISAREA SOLDULUI CLIENTULUI CU ID-UL 4

SELECT SOLD
FROM SOLD
WHERE ID_CARD = (SELECT C.ID_CARD 
                FROM CLIENT CL, CARD C
                WHERE CL.ID_CL = 4 AND CL.ID_CL = C.ID_CL);

--13. AFISAREA ORASELOR A CAROR NUMAR DE CLIENTI AU SOLDUL MAI MARE DE 1000

SELECT DISTINCT SUBSTR(CL.ADRESA_CL, 0, INSTR(CL.ADRESA_CL, ',')-1) AS ORAS, COUNT(CL.ID_CL) NR_CLIENTI
FROM CLIENT CL
WHERE CL.ID_CL IN (SELECT C.ID_CL
                  FROM CARD C, SOLD S
                  WHERE S.ID_CARD=C.ID_CARD AND S.SOLD > 1000)
GROUP BY SUBSTR(CL.ADRESA_CL, 0, INSTR(CL.ADRESA_CL, ',')-1);

--14. ACTUALIZARE SOLD CU 100 DE UNITATI MONETARE IN PLUS PENTRU CEI CARE DETIN CARD VISA.S

UPDATE SOLD S
SET S.SOLD = S.SOLD +100
WHERE S.ID_CARD IN (SELECT S.ID_CARD
                    FROM SOLD S, CARD C
                    WHERE S.ID_CARD = C.ID_CARD AND C.TIP_CARD = 'VISA');
                    
 --15. DATA EXPIRARII CARDULUI PENTRU CARE S-A EFECTUAT O TRANZACTIE IN DATA DE 01 MARTIE 2022
 
 SELECT C.ID_CARD, C.DATA_EXPIRARII
 FROM CARD C
 WHERE C.ID_CARD = (SELECT C.ID_CARD 
                    FROM CARD C, INREGISTRARE_TRANZACTIE IT
                    WHERE IT.DATA_INREG = '01-MAR-22' AND IT.ID_CARD = C.ID_CARD);



--16. ORASELE IN CARE LOCUIESC MAI MULT DE 2 CLIENTI CARE DETIN CARD MASTERCARD
--SI CARE AU EFECTUAT CEL PUTIN O TRANZACTIE

SELECT DISTINCT SUBSTR(CL.ADRESA_CL, 0, INSTR(CL.ADRESA_CL, ',')-1) AS ORAS, COUNT(CL.ID_CL) NR_CLIENTI
FROM CLIENT CL
WHERE CL.ID_CL IN (SELECT C.ID_CL
                    FROM CARD C, INREGISTRARE_TRANZACTIE IT
                    WHERE C.ID_CARD = IT.ID_CARD AND C.TIP_CARD = 'MASTERCARD')
GROUP BY SUBSTR(CL.ADRESA_CL, 0, INSTR(CL.ADRESA_CL, ',')-1)
HAVING COUNT(CL.ID_CL) >=2;


COMMIT;


--17. CREAREA UNEI TABELE VIRTUALE CU DATELE CLIENTILOR CARE DETIN CARD VISA

CREATE OR REPLACE VIEW CLIENTI_VISA AS
SELECT CL.ID_CL, CL.NUME_CL, CL.PRENUME_CL, CL.DATA_NASTERII_CL, CL.ADRESA_CL, CL.EMAIL_CL, CL.NR_TELEFON_CL
FROM CLIENT CL, CARD C 
WHERE CL.ID_CL = C.ID_CL AND C.TIP_CARD = 'VISA';

--18. CREAREA UNEI TABELE VIRTUALE CU DATELE CLIENTILOR CARE DETIN CARD MASTERCARD

CREATE OR REPLACE VIEW CLIENTI_MASTERCARD AS
SELECT CL.ID_CL, CL.NUME_CL, CL.PRENUME_CL, CL.DATA_NASTERII_CL, CL.ADRESA_CL, CL.EMAIL_CL, CL.NR_TELEFON_CL
FROM CLIENT CL, CARD C 
WHERE CL.ID_CL = C.ID_CL AND C.TIP_CARD = 'MASTERCARD';


--19. CREAREA UNEI TABELE VIRTUALE CARE SA CONTINA IN BAZA CARDULUI SOLDUL, SUMA DEPUSA, SUMA RETRASA
CREATE OR REPLACE VIEW CARD_TRANZ AS
SELECT C.ID_CARD AS ID_CARD, S.SOLD AS SOLD, D.SUMA_DEP AS SUMA_DEPUSA, R.SUMA AS SUMA_RETRASA
FROM SOLD S, DEPUNERE D, RETRAGERE R, CARD C
WHERE C.ID_CARD = S.ID_CARD AND D.ID_CARD = S.ID_CARD AND D.ID_CARD = R.ID_CARD;


--20. IN TABELA CREATA VOI ADAUGA UN NOU CAMP NOUL_SOLD
CREATE OR REPLACE VIEW CARD_TRANZ AS
SELECT C.ID_CARD AS ID_CARD, S.SOLD AS SOLD, D.SUMA_DEP AS SUMA_DEPUSA, R.SUMA AS SUMA_RETRASA,
S.SOLD - R.SUMA +D.SUMA_DEP AS NOUL_SOLD, CL.ID_CL
FROM SOLD S, DEPUNERE D, RETRAGERE R, CARD C, CLIENT CL
WHERE C.ID_CARD = S.ID_CARD AND D.ID_CARD = S.ID_CARD AND D.ID_CARD = R.ID_CARD AND CL.ID_CL = C.ID_CL;

--21. TABELA VIRTUALA CU CLIENTII CARE AU SOLDUL IN RON

CREATE OR REPLACE VIEW CLIENTI_RON AS
SELECT *
FROM CLIENT
WHERE ID_CL = (SELECT C.ID_CL
                FROM CARD C, CLIENT CL, SOLD S
                WHERE C.ID_CL = CL.ID_CL AND C.ID_CARD = S.ID_SOLD AND S.MONEDA = 'RON');
                
--22. TABELA VIRTUALA CU NUME, PRENUME SI VARSTA CLIENTILOR

CREATE OR REPLACE VIEW DATE_CL AS
SELECT ID_CL, NUME_CL, PRENUME_CL, ROUND((SYSDATE-DATA_NASTERII_CL)/365,0) AS VARSTA
FROM CLIENT;

COMMIT;

--23.VARSTA CLIENTILOR CU NOUL SOLD MAI MARE DE 4000 SI CARD VISA

SELECT DC.NUME_CL, DC.PRENUME_CL, DC.VARSTA, CT.NOUL_SOLD
FROM DATE_CL DC , CARD_TRANZ CT, CLIENTI_VISA CV
WHERE DC.ID_CL = CT.ID_CL AND CT.ID_CL= CV.ID_CL AND CT.NOUL_SOLD > 4000;

--24. CALCULAREA TERMENULUI DE VALABILITATE A CARDULUI CU NOUL SOLD MAI MIC DE 2000

SELECT C.ID_CARD, ROUND((C.DATA_EXPIRARII-SYSDATE),0) AS VALABILITATE_CARD_RAMASA_ZILE, CT.NOUL_SOLD
FROM CARD C, CARD_TRANZ CT
WHERE C.ID_CARD = CT.ID_CARD AND CT.NOUL_SOLD < 2000;

